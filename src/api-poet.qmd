---
title: PoET
format:
  html:
    code-fold: true
---

Protein Evolutionary Transformer (`PoET`) is a machine learning model that generates and identifies protein sequence variants with improved function and stability. PoET requires a prompt, (ie. a set of sequences representing the target protein sequence distribution). This will commonly be an evolutionary context prompt in the form of filtered MSAs (Align). But `PoET` can accept any collection of sequences!

### Align
Endpoints to perform multiple sequence alignment (MSA) workflows for `PoET`. Create a multiple sequence alignment from a seed sequence, upload a custom MSA, or even upload a custom prompt for use with `PoET` endpoints!

### PoET

Endpoints to call our generative `PoET` model for de novo generation of proteins, evaluation of protein fitness, and single site mutant analysis of proteins. These workflows are all possible without prior wet lab data, and therefore do not require assaydata to be pre-loaded! The endpoints enable scoring and generating sequences from a prompt. 

## Endpoints


```{=html}
  <script src="https://unpkg.com/swagger-ui-dist@5.1/swagger-ui-bundle.js"></script>
  <script type="module">
    import getSwaggerJson from './utils/getSwaggerJson.js'
    window.onload = async function() {
      // get swagerSpecs manipulated 
      const swagerSpecs = await getSwaggerJson('poet');
      
      const ui = SwaggerUIBundle({
        spec: swagerSpecs,
        dom_id: "#swagger-ui",
        config: {
          deepLinking: true,
          tagsSorter: "alpha",
          docExpansion: "list",
        },
        requestInterceptor: (request) => {
          const requestPath = request.url.split('/').slice(3).join('/')
          if (!request.url.includes("openapi.json")) {
            request.url = "https://dev.api.openprotein.ai/" + requestPath
          }
          return request;
        },
      })
    };
  </script>
  <script type="module">
    import addSwaggerEndpointsToTOC from './utils/addSwaggerEndpointsToTOC.js';

    addSwaggerEndpointsToTOC(2);
  </script>
  <link rel="stylesheet" href="css/swagger-ui.css">
  <div id="swagger-ui"></div>
```
