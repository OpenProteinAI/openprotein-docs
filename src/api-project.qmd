---
title: Project
format:
  html:
    code-fold: true
    include-in-header: 
      - api-header.html
---

This section provides detailed information about the endpoints available within the 'Project' module. These endpoints enable users to leverage the functionalities offered by the module and perform various actions programmatically. Using these endpoints, access features like train a model, make predictions, design sequences based on properties and check on job statuses.

### Assaydata
Endpoints to upload a dataset to OpenProteinâ€™s engineering platform for training, predicting and evaluating tasks. The expected format of each dataset as 2 column CSV:

  * The full sequence of each variant (mutation codes are also accepted)
  * 1+ columns with your measured properties (missing values are acceptable)

### Train
Endpoints to train a model(s) on your measured properties to enable predictions for new sequences! These workflows will additionally perform cross-validation on specific models to estimate uncertainty. 

### Predict
Endpoints for predicting properties on arbitrary sequences with your OpenProtein trained models! Make predictions for single sequences as well as single mutant variants of the sequence. 

::: {.callout-note} 
A trained model is required before predict endpoints can be utilized.
:::

### Design
Endpoints to design new sequences based on your stated objectives and our genetic algorithm! These endpoints will require datasets to be uploaded via assaydata endpoints. 

::: {.callout-note} 
A trained model is required before design endpoints can be utilized.
:::

## Endpoints

```{=html}
  <script type="module">
    import getSwaggerJson from './utils/getSwaggerJson.js';
    import addSwaggerEndpointsToTOC from './utils/addSwaggerEndpointsToTOC.js';

    window.onload = async function() {
      // get swagerSpecs manipulated 
      const swagerSpecs = await getSwaggerJson('project')

      const ui = SwaggerUIBundle({
        spec: swagerSpecs,
        dom_id: "#swagger-ui",
        config: {
          deepLinking: true,
          tagsSorter: "alpha",
          docExpansion: "list",
        },
        requestInterceptor: (request) => {
          const requestPath = request.url.split('/').slice(3).join('/')
          if (!request.url.includes("openapi.json")) {
            request.url = "https://dev.api.openprotein.ai/" + requestPath
          }
          return request;
        },
      });
      addSwaggerEndpointsToTOC(4);
    };
  </script>
  <link rel="stylesheet" href="css/swagger-ui.css">
  <div id="swagger-ui"></div>
```
